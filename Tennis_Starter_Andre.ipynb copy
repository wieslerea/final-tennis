{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "file_dir = './repos/atp-matches-dataset/'\n",
    "data_list = []\n",
    "for file in os.listdir(file_dir):\n",
    "     data_list.append(pd.read_csv(file_dir + file))\n",
    "        \n",
    "df = pd.concat(data_list, ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tourney_id</th>\n",
       "      <th>tourney_name</th>\n",
       "      <th>surface</th>\n",
       "      <th>draw_size</th>\n",
       "      <th>tourney_level</th>\n",
       "      <th>tourney_date</th>\n",
       "      <th>match_num</th>\n",
       "      <th>winner_id</th>\n",
       "      <th>winner_seed</th>\n",
       "      <th>winner_entry</th>\n",
       "      <th>...</th>\n",
       "      <th>w_bpFaced</th>\n",
       "      <th>l_ace</th>\n",
       "      <th>l_df</th>\n",
       "      <th>l_svpt</th>\n",
       "      <th>l_1stIn</th>\n",
       "      <th>l_1stWon</th>\n",
       "      <th>l_2ndWon</th>\n",
       "      <th>l_SvGms</th>\n",
       "      <th>l_bpSaved</th>\n",
       "      <th>l_bpFaced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2008-338</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Hard</td>\n",
       "      <td>32</td>\n",
       "      <td>A</td>\n",
       "      <td>20080107.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>104755</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-338</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Hard</td>\n",
       "      <td>32</td>\n",
       "      <td>A</td>\n",
       "      <td>20080107.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>104098</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008-338</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Hard</td>\n",
       "      <td>32</td>\n",
       "      <td>A</td>\n",
       "      <td>20080107.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>103206</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008-338</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Hard</td>\n",
       "      <td>32</td>\n",
       "      <td>A</td>\n",
       "      <td>20080107.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>104269</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-338</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Hard</td>\n",
       "      <td>32</td>\n",
       "      <td>A</td>\n",
       "      <td>20080107.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>102148</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  tourney_id tourney_name surface draw_size tourney_level  tourney_date  \\\n",
       "0   2008-338       Sydney    Hard        32             A    20080107.0   \n",
       "1   2008-338       Sydney    Hard        32             A    20080107.0   \n",
       "2   2008-338       Sydney    Hard        32             A    20080107.0   \n",
       "3   2008-338       Sydney    Hard        32             A    20080107.0   \n",
       "4   2008-338       Sydney    Hard        32             A    20080107.0   \n",
       "\n",
       "   match_num winner_id  winner_seed winner_entry  ... w_bpFaced l_ace  l_df  \\\n",
       "0        1.0    104755          1.0          NaN  ...       4.0   2.0   4.0   \n",
       "1        2.0    104098          NaN          NaN  ...       4.0   2.0   1.0   \n",
       "2        3.0    103206          NaN          NaN  ...       6.0   5.0   1.0   \n",
       "3        4.0    104269          8.0          NaN  ...       8.0  11.0   5.0   \n",
       "4        5.0    102148          NaN          NaN  ...       8.0   3.0   1.0   \n",
       "\n",
       "  l_svpt  l_1stIn  l_1stWon  l_2ndWon  l_SvGms  l_bpSaved l_bpFaced  \n",
       "0   66.0     41.0      29.0      11.0     10.0        1.0       3.0  \n",
       "1   54.0     37.0      23.0       7.0      9.0        2.0       6.0  \n",
       "2   98.0     63.0      34.0      20.0     13.0        6.0      11.0  \n",
       "3   99.0     54.0      35.0      19.0     13.0        8.0      13.0  \n",
       "4   57.0     31.0      21.0      10.0     10.0        2.0       7.0  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 53571 entries, 0 to 53570\n",
      "Data columns (total 49 columns):\n",
      "tourney_id            53508 non-null object\n",
      "tourney_name          53494 non-null object\n",
      "surface               52250 non-null object\n",
      "draw_size             53508 non-null object\n",
      "tourney_level         53500 non-null object\n",
      "tourney_date          53440 non-null float64\n",
      "match_num             53440 non-null float64\n",
      "winner_id             53508 non-null object\n",
      "winner_seed           24126 non-null float64\n",
      "winner_entry          9221 non-null object\n",
      "winner_name           53472 non-null object\n",
      "winner_hand           53458 non-null object\n",
      "winner_ht             50861 non-null float64\n",
      "winner_ioc            53468 non-null object\n",
      "winner_age            53456 non-null float64\n",
      "winner_rank           52421 non-null float64\n",
      "winner_rank_points    52421 non-null float64\n",
      "loser_id              53468 non-null float64\n",
      "loser_seed            14474 non-null float64\n",
      "loser_entry           13152 non-null object\n",
      "loser_name            53468 non-null object\n",
      "loser_hand            53453 non-null object\n",
      "loser_ht              48895 non-null float64\n",
      "loser_ioc             53468 non-null object\n",
      "loser_age             53446 non-null float64\n",
      "loser_rank            51744 non-null float64\n",
      "loser_rank_points     51744 non-null float64\n",
      "score                 53467 non-null object\n",
      "best_of               53468 non-null float64\n",
      "round                 50179 non-null object\n",
      "minutes               43213 non-null float64\n",
      "w_ace                 44451 non-null float64\n",
      "w_df                  44451 non-null float64\n",
      "w_svpt                44451 non-null float64\n",
      "w_1stIn               44451 non-null float64\n",
      "w_1stWon              44451 non-null float64\n",
      "w_2ndWon              44451 non-null float64\n",
      "w_SvGms               44451 non-null float64\n",
      "w_bpSaved             44451 non-null float64\n",
      "w_bpFaced             44451 non-null float64\n",
      "l_ace                 44451 non-null float64\n",
      "l_df                  44451 non-null float64\n",
      "l_svpt                44451 non-null float64\n",
      "l_1stIn               44451 non-null float64\n",
      "l_1stWon              44451 non-null float64\n",
      "l_2ndWon              44451 non-null float64\n",
      "l_SvGms               44451 non-null float64\n",
      "l_bpSaved             44451 non-null float64\n",
      "l_bpFaced             44451 non-null float64\n",
      "dtypes: float64(33), object(16)\n",
      "memory usage: 20.0+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Hard', 'Grass', 'Clay', 'Carpet', 185.0, nan, 193.0, 188.0, 198.0,\n",
       "       178.0, 180.0, 163.0, 183.0, 190.0, 196.0, 181.0, 172.0, 175.0,\n",
       "       203.0, 206.0, 173.0, 208.0], dtype=object)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#we need to deal with the null values in surface\n",
    "df.surface.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# i think we can drop some of the object colmns such as tourney name, tourneyid,drawsize, date. \n",
    "#data we need to convert to numeric, winner id, entrey name and hand. \n",
    "#our predicted variable has to be winner id. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method Series.count of 0        104755\n",
       "1        104098\n",
       "2        103206\n",
       "3        104269\n",
       "4        102148\n",
       "          ...  \n",
       "53566    106387\n",
       "53567    108749\n",
       "53568    104467\n",
       "53569    104467\n",
       "53570    109336\n",
       "Name: winner_id, Length: 53571, dtype: object>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.winner_id.unique()\n",
    "df['winner_id'].count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tourney_id</th>\n",
       "      <th>tourney_name</th>\n",
       "      <th>surface</th>\n",
       "      <th>draw_size</th>\n",
       "      <th>tourney_level</th>\n",
       "      <th>tourney_date</th>\n",
       "      <th>match_num</th>\n",
       "      <th>winner_id</th>\n",
       "      <th>winner_seed</th>\n",
       "      <th>winner_entry</th>\n",
       "      <th>...</th>\n",
       "      <th>w_bpFaced</th>\n",
       "      <th>l_ace</th>\n",
       "      <th>l_df</th>\n",
       "      <th>l_svpt</th>\n",
       "      <th>l_1stIn</th>\n",
       "      <th>l_1stWon</th>\n",
       "      <th>l_2ndWon</th>\n",
       "      <th>l_SvGms</th>\n",
       "      <th>l_bpSaved</th>\n",
       "      <th>l_bpFaced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>53264</th>\n",
       "      <td>2014-605</td>\n",
       "      <td>Tour Finals</td>\n",
       "      <td>Hard</td>\n",
       "      <td>8</td>\n",
       "      <td>F</td>\n",
       "      <td>20141109.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>105453</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53265</th>\n",
       "      <td>2014-605</td>\n",
       "      <td>Tour Finals</td>\n",
       "      <td>Hard</td>\n",
       "      <td>8</td>\n",
       "      <td>F</td>\n",
       "      <td>20141109.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>103819</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53266</th>\n",
       "      <td>2014-605</td>\n",
       "      <td>Tour Finals</td>\n",
       "      <td>Hard</td>\n",
       "      <td>8</td>\n",
       "      <td>F</td>\n",
       "      <td>20141109.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>104918</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53267</th>\n",
       "      <td>2014-605</td>\n",
       "      <td>Tour Finals</td>\n",
       "      <td>Hard</td>\n",
       "      <td>8</td>\n",
       "      <td>F</td>\n",
       "      <td>20141109.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>104925</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53268</th>\n",
       "      <td>2014-605</td>\n",
       "      <td>Tour Finals</td>\n",
       "      <td>Hard</td>\n",
       "      <td>8</td>\n",
       "      <td>F</td>\n",
       "      <td>20141109.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>103819</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      tourney_id tourney_name surface draw_size tourney_level  tourney_date  \\\n",
       "53264   2014-605  Tour Finals    Hard         8             F    20141109.0   \n",
       "53265   2014-605  Tour Finals    Hard         8             F    20141109.0   \n",
       "53266   2014-605  Tour Finals    Hard         8             F    20141109.0   \n",
       "53267   2014-605  Tour Finals    Hard         8             F    20141109.0   \n",
       "53268   2014-605  Tour Finals    Hard         8             F    20141109.0   \n",
       "\n",
       "       match_num winner_id  winner_seed winner_entry  ... w_bpFaced l_ace  \\\n",
       "53264       10.0    105453          4.0          NaN  ...       9.0   2.0   \n",
       "53265       11.0    103819          2.0          NaN  ...       4.0  10.0   \n",
       "53266       12.0    104918          5.0          NaN  ...       1.0   4.0   \n",
       "53267       14.0    104925          1.0          NaN  ...       4.0   3.0   \n",
       "53268       13.0    103819          2.0          NaN  ...       6.0  10.0   \n",
       "\n",
       "       l_df l_svpt  l_1stIn  l_1stWon  l_2ndWon  l_SvGms  l_bpSaved l_bpFaced  \n",
       "53264   3.0   88.0     48.0      30.0      20.0     14.0        4.0       9.0  \n",
       "53265   2.0   60.0     28.0      22.0      15.0      9.0        4.0       6.0  \n",
       "53266   2.0   62.0     33.0      23.0      14.0     10.0        2.0       5.0  \n",
       "53267   6.0   67.0     38.0      29.0       5.0     11.0        3.0       9.0  \n",
       "53268   4.0  123.0     47.0      38.0      36.0     17.0        6.0       9.0  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "checkThis = ['l_ace']\n",
    "bd = df.dropna(subset = checkThis)\n",
    "bd.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 44451 entries, 0 to 53268\n",
      "Data columns (total 49 columns):\n",
      "tourney_id            44451 non-null object\n",
      "tourney_name          44451 non-null object\n",
      "surface               44451 non-null object\n",
      "draw_size             44451 non-null object\n",
      "tourney_level         44451 non-null object\n",
      "tourney_date          44451 non-null float64\n",
      "match_num             44451 non-null float64\n",
      "winner_id             44451 non-null float64\n",
      "winner_seed           20505 non-null float64\n",
      "winner_entry          5837 non-null object\n",
      "winner_name           44451 non-null object\n",
      "winner_hand           44451 non-null object\n",
      "winner_ht             43611 non-null float64\n",
      "winner_ioc            44451 non-null object\n",
      "winner_age            44451 non-null float64\n",
      "winner_rank           43849 non-null float64\n",
      "winner_rank_points    43849 non-null float64\n",
      "loser_id              44451 non-null float64\n",
      "loser_seed            10955 non-null float64\n",
      "loser_entry           9778 non-null object\n",
      "loser_name            44451 non-null object\n",
      "loser_hand            44451 non-null object\n",
      "loser_ht              42611 non-null float64\n",
      "loser_ioc             44451 non-null object\n",
      "loser_age             44450 non-null float64\n",
      "loser_rank            43770 non-null float64\n",
      "loser_rank_points     43770 non-null float64\n",
      "score                 44451 non-null object\n",
      "best_of               44451 non-null float64\n",
      "round                 44451 non-null object\n",
      "minutes               43159 non-null float64\n",
      "w_ace                 44451 non-null float64\n",
      "w_df                  44451 non-null float64\n",
      "w_svpt                44451 non-null float64\n",
      "w_1stIn               44451 non-null float64\n",
      "w_1stWon              44451 non-null float64\n",
      "w_2ndWon              44451 non-null float64\n",
      "w_SvGms               44451 non-null float64\n",
      "w_bpSaved             44451 non-null float64\n",
      "w_bpFaced             44451 non-null float64\n",
      "l_ace                 44451 non-null float64\n",
      "l_df                  44451 non-null float64\n",
      "l_svpt                44451 non-null float64\n",
      "l_1stIn               44451 non-null float64\n",
      "l_1stWon              44451 non-null float64\n",
      "l_2ndWon              44451 non-null float64\n",
      "l_SvGms               44451 non-null float64\n",
      "l_bpSaved             44451 non-null float64\n",
      "l_bpFaced             44451 non-null float64\n",
      "dtypes: float64(34), object(15)\n",
      "memory usage: 17.0+ MB\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/Cellar/jupyterlab/1.2.4/libexec/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    }
   ],
   "source": [
    "bd[\"winner_id\"] = bd.winner_id.astype(float)\n",
    "bd.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tourney_date</th>\n",
       "      <th>match_num</th>\n",
       "      <th>winner_id</th>\n",
       "      <th>winner_seed</th>\n",
       "      <th>winner_ht</th>\n",
       "      <th>winner_age</th>\n",
       "      <th>winner_rank</th>\n",
       "      <th>winner_rank_points</th>\n",
       "      <th>loser_id</th>\n",
       "      <th>loser_seed</th>\n",
       "      <th>...</th>\n",
       "      <th>w_bpFaced</th>\n",
       "      <th>l_ace</th>\n",
       "      <th>l_df</th>\n",
       "      <th>l_svpt</th>\n",
       "      <th>l_1stIn</th>\n",
       "      <th>l_1stWon</th>\n",
       "      <th>l_2ndWon</th>\n",
       "      <th>l_SvGms</th>\n",
       "      <th>l_bpSaved</th>\n",
       "      <th>l_bpFaced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>104755.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>21.555099</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1930.0</td>\n",
       "      <td>104214.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>104098.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>185.0</td>\n",
       "      <td>25.070500</td>\n",
       "      <td>35.0</td>\n",
       "      <td>853.0</td>\n",
       "      <td>104527.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>103206.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>175.0</td>\n",
       "      <td>29.609856</td>\n",
       "      <td>51.0</td>\n",
       "      <td>621.0</td>\n",
       "      <td>103429.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>104269.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>188.0</td>\n",
       "      <td>24.145106</td>\n",
       "      <td>27.0</td>\n",
       "      <td>1050.0</td>\n",
       "      <td>103852.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>102148.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>178.0</td>\n",
       "      <td>35.077344</td>\n",
       "      <td>37.0</td>\n",
       "      <td>792.0</td>\n",
       "      <td>103484.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   tourney_date  match_num  winner_id  winner_seed  winner_ht  winner_age  \\\n",
       "0    20080107.0        1.0   104755.0          1.0      185.0   21.555099   \n",
       "1    20080107.0        2.0   104098.0          NaN      185.0   25.070500   \n",
       "2    20080107.0        3.0   103206.0          NaN      175.0   29.609856   \n",
       "3    20080107.0        4.0   104269.0          8.0      188.0   24.145106   \n",
       "4    20080107.0        5.0   102148.0          NaN      178.0   35.077344   \n",
       "\n",
       "   winner_rank  winner_rank_points  loser_id  loser_seed  ...  w_bpFaced  \\\n",
       "0          8.0              1930.0  104214.0         NaN  ...        4.0   \n",
       "1         35.0               853.0  104527.0         NaN  ...        4.0   \n",
       "2         51.0               621.0  103429.0         NaN  ...        6.0   \n",
       "3         27.0              1050.0  103852.0         NaN  ...        8.0   \n",
       "4         37.0               792.0  103484.0         3.0  ...        8.0   \n",
       "\n",
       "   l_ace  l_df  l_svpt  l_1stIn  l_1stWon  l_2ndWon  l_SvGms  l_bpSaved  \\\n",
       "0    2.0   4.0    66.0     41.0      29.0      11.0     10.0        1.0   \n",
       "1    2.0   1.0    54.0     37.0      23.0       7.0      9.0        2.0   \n",
       "2    5.0   1.0    98.0     63.0      34.0      20.0     13.0        6.0   \n",
       "3   11.0   5.0    99.0     54.0      35.0      19.0     13.0        8.0   \n",
       "4    3.0   1.0    57.0     31.0      21.0      10.0     10.0        2.0   \n",
       "\n",
       "   l_bpFaced  \n",
       "0        3.0  \n",
       "1        6.0  \n",
       "2       11.0  \n",
       "3       13.0  \n",
       "4        7.0  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2 = bd.select_dtypes(exclude=['object'])\n",
    "df2.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 44451 entries, 0 to 53268\n",
      "Data columns (total 34 columns):\n",
      "tourney_date          44451 non-null float64\n",
      "match_num             44451 non-null float64\n",
      "winner_id             44451 non-null float64\n",
      "winner_seed           20505 non-null float64\n",
      "winner_ht             43611 non-null float64\n",
      "winner_age            44451 non-null float64\n",
      "winner_rank           43849 non-null float64\n",
      "winner_rank_points    43849 non-null float64\n",
      "loser_id              44451 non-null float64\n",
      "loser_seed            10955 non-null float64\n",
      "loser_ht              42611 non-null float64\n",
      "loser_age             44450 non-null float64\n",
      "loser_rank            43770 non-null float64\n",
      "loser_rank_points     43770 non-null float64\n",
      "best_of               44451 non-null float64\n",
      "minutes               43159 non-null float64\n",
      "w_ace                 44451 non-null float64\n",
      "w_df                  44451 non-null float64\n",
      "w_svpt                44451 non-null float64\n",
      "w_1stIn               44451 non-null float64\n",
      "w_1stWon              44451 non-null float64\n",
      "w_2ndWon              44451 non-null float64\n",
      "w_SvGms               44451 non-null float64\n",
      "w_bpSaved             44451 non-null float64\n",
      "w_bpFaced             44451 non-null float64\n",
      "l_ace                 44451 non-null float64\n",
      "l_df                  44451 non-null float64\n",
      "l_svpt                44451 non-null float64\n",
      "l_1stIn               44451 non-null float64\n",
      "l_1stWon              44451 non-null float64\n",
      "l_2ndWon              44451 non-null float64\n",
      "l_SvGms               44451 non-null float64\n",
      "l_bpSaved             44451 non-null float64\n",
      "l_bpFaced             44451 non-null float64\n",
      "dtypes: float64(34)\n",
      "memory usage: 11.9 MB\n"
     ]
    }
   ],
   "source": [
    "#just realized we need to fix winner ID as well, \n",
    "df2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y = df2[\"winner_id\"].values\n",
    "X = df2.iloc[:,:].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(35560, 34)\n",
      "(8891, 34)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)\n",
    "print(x_train.shape)\n",
    "print(x_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tourney_date</th>\n",
       "      <th>match_num</th>\n",
       "      <th>winner_id</th>\n",
       "      <th>winner_seed</th>\n",
       "      <th>winner_ht</th>\n",
       "      <th>winner_age</th>\n",
       "      <th>winner_rank</th>\n",
       "      <th>winner_rank_points</th>\n",
       "      <th>loser_id</th>\n",
       "      <th>loser_seed</th>\n",
       "      <th>...</th>\n",
       "      <th>w_bpFaced</th>\n",
       "      <th>l_ace</th>\n",
       "      <th>l_df</th>\n",
       "      <th>l_svpt</th>\n",
       "      <th>l_1stIn</th>\n",
       "      <th>l_1stWon</th>\n",
       "      <th>l_2ndWon</th>\n",
       "      <th>l_SvGms</th>\n",
       "      <th>l_bpSaved</th>\n",
       "      <th>l_bpFaced</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>104755.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>21.555099</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1930.0</td>\n",
       "      <td>104214.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>104098.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>25.070500</td>\n",
       "      <td>35.0</td>\n",
       "      <td>853.0</td>\n",
       "      <td>104527.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>103206.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>29.609856</td>\n",
       "      <td>51.0</td>\n",
       "      <td>621.0</td>\n",
       "      <td>103429.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>104269.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>188.0</td>\n",
       "      <td>24.145106</td>\n",
       "      <td>27.0</td>\n",
       "      <td>1050.0</td>\n",
       "      <td>103852.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20080107.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>102148.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>35.077344</td>\n",
       "      <td>37.0</td>\n",
       "      <td>792.0</td>\n",
       "      <td>103484.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53264</th>\n",
       "      <td>20141109.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>105453.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>24.865161</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4625.0</td>\n",
       "      <td>103970.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53265</th>\n",
       "      <td>20141109.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>103819.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>33.256674</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8700.0</td>\n",
       "      <td>105683.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53266</th>\n",
       "      <td>20141109.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>104918.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>190.0</td>\n",
       "      <td>27.490760</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4475.0</td>\n",
       "      <td>105683.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53267</th>\n",
       "      <td>20141109.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>104925.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>188.0</td>\n",
       "      <td>27.471595</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10010.0</td>\n",
       "      <td>105453.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53268</th>\n",
       "      <td>20141109.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>103819.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>33.256674</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8700.0</td>\n",
       "      <td>104527.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>44451 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       tourney_date  match_num  winner_id  winner_seed  winner_ht  winner_age  \\\n",
       "0        20080107.0        1.0   104755.0          1.0      185.0   21.555099   \n",
       "1        20080107.0        2.0   104098.0          1.0      185.0   25.070500   \n",
       "2        20080107.0        3.0   103206.0          1.0      175.0   29.609856   \n",
       "3        20080107.0        4.0   104269.0          8.0      188.0   24.145106   \n",
       "4        20080107.0        5.0   102148.0          8.0      178.0   35.077344   \n",
       "...             ...        ...        ...          ...        ...         ...   \n",
       "53264    20141109.0       10.0   105453.0          4.0      178.0   24.865161   \n",
       "53265    20141109.0       11.0   103819.0          2.0      185.0   33.256674   \n",
       "53266    20141109.0       12.0   104918.0          5.0      190.0   27.490760   \n",
       "53267    20141109.0       14.0   104925.0          1.0      188.0   27.471595   \n",
       "53268    20141109.0       13.0   103819.0          2.0      185.0   33.256674   \n",
       "\n",
       "       winner_rank  winner_rank_points  loser_id  loser_seed  ...  w_bpFaced  \\\n",
       "0              8.0              1930.0  104214.0         NaN  ...        4.0   \n",
       "1             35.0               853.0  104527.0         NaN  ...        4.0   \n",
       "2             51.0               621.0  103429.0         NaN  ...        6.0   \n",
       "3             27.0              1050.0  103852.0         NaN  ...        8.0   \n",
       "4             37.0               792.0  103484.0         3.0  ...        8.0   \n",
       "...            ...                 ...       ...         ...  ...        ...   \n",
       "53264          5.0              4625.0  103970.0         9.0  ...        9.0   \n",
       "53265          2.0              8700.0  105683.0         8.0  ...        4.0   \n",
       "53266          6.0              4475.0  105683.0         8.0  ...        1.0   \n",
       "53267          1.0             10010.0  105453.0         4.0  ...        4.0   \n",
       "53268          2.0              8700.0  104527.0         3.0  ...        6.0   \n",
       "\n",
       "       l_ace  l_df  l_svpt  l_1stIn  l_1stWon  l_2ndWon  l_SvGms  l_bpSaved  \\\n",
       "0        2.0   4.0    66.0     41.0      29.0      11.0     10.0        1.0   \n",
       "1        2.0   1.0    54.0     37.0      23.0       7.0      9.0        2.0   \n",
       "2        5.0   1.0    98.0     63.0      34.0      20.0     13.0        6.0   \n",
       "3       11.0   5.0    99.0     54.0      35.0      19.0     13.0        8.0   \n",
       "4        3.0   1.0    57.0     31.0      21.0      10.0     10.0        2.0   \n",
       "...      ...   ...     ...      ...       ...       ...      ...        ...   \n",
       "53264    2.0   3.0    88.0     48.0      30.0      20.0     14.0        4.0   \n",
       "53265   10.0   2.0    60.0     28.0      22.0      15.0      9.0        4.0   \n",
       "53266    4.0   2.0    62.0     33.0      23.0      14.0     10.0        2.0   \n",
       "53267    3.0   6.0    67.0     38.0      29.0       5.0     11.0        3.0   \n",
       "53268   10.0   4.0   123.0     47.0      38.0      36.0     17.0        6.0   \n",
       "\n",
       "       l_bpFaced  \n",
       "0            3.0  \n",
       "1            6.0  \n",
       "2           11.0  \n",
       "3           13.0  \n",
       "4            7.0  \n",
       "...          ...  \n",
       "53264        9.0  \n",
       "53265        6.0  \n",
       "53266        5.0  \n",
       "53267        9.0  \n",
       "53268        9.0  \n",
       "\n",
       "[44451 rows x 34 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.fillna(method='ffill')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Input contains NaN, infinity or a value too large for dtype('float32').",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-22-aa0d96937003>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtree\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mmodel\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDecisionTreeClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmax_depth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/usr/local/Cellar/jupyterlab/1.2.4/libexec/lib/python3.7/site-packages/sklearn/tree/_classes.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, check_input, X_idx_sorted)\u001b[0m\n\u001b[1;32m    875\u001b[0m             \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    876\u001b[0m             \u001b[0mcheck_input\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcheck_input\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 877\u001b[0;31m             X_idx_sorted=X_idx_sorted)\n\u001b[0m\u001b[1;32m    878\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    879\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/Cellar/jupyterlab/1.2.4/libexec/lib/python3.7/site-packages/sklearn/tree/_classes.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, check_input, X_idx_sorted)\u001b[0m\n\u001b[1;32m    147\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    148\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcheck_input\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 149\u001b[0;31m             \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mDTYPE\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"csc\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    150\u001b[0m             \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mensure_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    151\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0missparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/Cellar/jupyterlab/1.2.4/libexec/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator)\u001b[0m\n\u001b[1;32m    576\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mforce_all_finite\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    577\u001b[0m             _assert_all_finite(array,\n\u001b[0;32m--> 578\u001b[0;31m                                allow_nan=force_all_finite == 'allow-nan')\n\u001b[0m\u001b[1;32m    579\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    580\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mensure_min_samples\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/Cellar/jupyterlab/1.2.4/libexec/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36m_assert_all_finite\u001b[0;34m(X, allow_nan, msg_dtype)\u001b[0m\n\u001b[1;32m     58\u001b[0m                     \u001b[0mmsg_err\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m                     (type_err,\n\u001b[0;32m---> 60\u001b[0;31m                      msg_dtype if msg_dtype is not None else X.dtype)\n\u001b[0m\u001b[1;32m     61\u001b[0m             )\n\u001b[1;32m     62\u001b[0m     \u001b[0;31m# for object dtype data, we only check for NaNs (GH-13254)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: Input contains NaN, infinity or a value too large for dtype('float32')."
     ]
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "model  = tree.DecisionTreeClassifier(max_depth=4)\n",
    "model = model.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
